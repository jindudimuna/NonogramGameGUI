#BlueJ class context
comment0.target=Constraint
comment0.text=\r\n\ A\ cell\ constraint\ (either\ row\ or\ column)\ in\ a\ Nonogram\ puzzle.\r\n\ \r\n\ @author\ Dr\ Mark\ C.\ Sinclair\r\n\ @version\ September\ 2022\r\n
comment1.params=pat\ cells
comment1.target=Constraint(NGPattern,\ Cell[])
comment1.text=\r\n\ Constructor\r\n\ \r\n\ @param\ pat\ the\ pattern\ of\ contiguous\ full\ cells\ that\ the\ cells\ should\ match\r\n\ @param\ cells\ the\ cells\ to\ which\ the\ pattern\ applies\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ String\ representation\ of\ the\ constraint,\ consisting\ of\ just\ the\ sequence\ of\ cell\ states\r\n\ \r\n\ @return\ the\ string\ representation\ (the\ cell\ state\ sequence)\r\n
comment11.params=
comment11.target=java.lang.String\ toStringFull()
comment11.text=\r\n\ String\ representation\ of\ the\ constraint\ (useful\ for\ debugging)\r\n\ \r\n\ @return\ the\ string\ representation\r\n
comment2.params=
comment2.target=boolean\ isValid()
comment2.text=\r\n\ Are\ the\ cells\ valid\ for\ this\ pattern?\r\n\ \r\n\ @return\ true\ if\ valid,\ otherwise\ false\r\n
comment3.params=
comment3.target=boolean\ isSolved()
comment3.text=\r\n\ Are\ the\ cells\ a\ solution\ to\ the\ pattern?\r\n\ \r\n\ @return\ true\ if\ the\ cells\ solve\ the\ pattern,\ otherwise\ false\r\n
comment4.params=
comment4.target=java.lang.String\ getRegExValid()
comment4.text=\r\n\ Retrieve\ the\ regular\ expression\ used\ to\ check\ the\ cells\ for\ validity\r\n\ \r\n\ @return\ the\ validity\ regular\ expression\ as\ a\ string\r\n
comment5.params=
comment5.target=java.lang.String\ getRegExSolved()
comment5.text=\r\n\ Retrieve\ the\ regular\ expression\ used\ to\ check\ the\ cells\ solve\ the\ pattern\r\n\ \r\n\ @return\ the\ solution\ regular\ expression\ as\ a\ string\r\n
comment6.params=
comment6.target=int[]\ getNums()
comment6.text=\r\n\ Retrieve\ the\ pattern\ of\ contiguous\ full\ cells\ as\ an\ integer\ array\ \r\n\ \r\n\ @return\ the\ integer\ array\ representation\r\n
comment7.params=
comment7.target=java.lang.String\ getNumsForNon()
comment7.text=\r\n\ Retrieve\ the\ pattern\ of\ contiguous\ full\ cells\ as\ a\ string\ suitable\ for\ .non\ file\ use\r\n\ \r\n\ @return\ the\ pattern\ as\ a\ string\ for\ a\ .non\ file\r\n
comment8.params=
comment8.target=java.lang.String\ getSequence()
comment8.text=\r\n\ Retrieve\ the\ sequence\ of\ state\ values\ from\ the\ cells\ as\ a\ string\r\n\ \r\n\ @return\ the\ sequence\ of\ cell\ state\ values\r\n
comment9.params=seq
comment9.target=void\ setSequence(java.lang.String)
comment9.text=\r\n\ Set\ the\ cell\ state\ values\ from\ a\ sequence\ string\r\n\ \r\n\ @param\ seq\ the\ cell\ sequence\ string\r\n
numComments=12
